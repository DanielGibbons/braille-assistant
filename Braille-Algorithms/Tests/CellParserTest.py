from CellParser.BrailleCellParser import BrailleCellParser


if __name__ == '__main__':

    braille_tests = [

        [[32, 14, 19, 1, 37, 29, 0, 30, 19, 17, 0, 32, 14, 19, 17, 17, 15]],  # Shaun the Sheep

        [[25, 21, 29, 4, 30]],  # don't

        [[30, 19, 17, 0, 27, 10, 23, 7, 4, 14, 0, 29, 17, 9, 5, 7, 1, 9, 17]],  # the girl's necklace

        [[32, 3, 8, 47, 32, 3]],  # B&B

        [[32, 14, 13, 10, 30, 19, 0, 8, 47, 0, 32, 14, 21, 29, 14]],  # Smith & Sons

        [[14, 16, 20, 16, 20, 16, 20]],  # s***

        [[11, 23, 17, 17, 0, 15, 17, 29, 16, 20]],  # free pen*

        [[16, 20, 7, 10, 13, 10, 30, 17, 25, 0, 14, 30, 21, 9, 5]],  # *limited stock

        [[27, 37, 17, 14, 30, 16, 35, 14, 16, 28]],  # guest(s)

        [[13, 10, 14, 30, 17, 1, 5, 0, 40, 35, 14, 10, 9, 40, 28]],  # misteak [sic]

        [[56, 35, 39, 1, 23, 10, 1, 3, 7, 17, 56, 28]],  # {variable}

        [[8, 35, 19, 30, 13, 7, 8, 28]],  # <html>

        [[32, 37, 14, 17, 11, 37, 7, 0, 15, 23, 21, 25, 37, 9, 30, 14, 18],  # Useful products:
         [0, 56, 50, 0, 30, 1, 7, 5, 10, 29, 27, 0, 9, 7, 21, 9, 5],  # . talking clock
         [0, 56, 50, 0, 30, 1, 9, 30, 10, 7, 17, 0, 25, 21, 30, 14],  # . tactile dots
         [0, 56, 50, 0, 58, 19, 10, 30, 17, 0, 9, 1, 29, 17]],  # . white cane

        [[10, 30, 0, 10, 14, 0, 14, 37, 13, 13, 17, 23, 2],  # it is summer,
         [19, 21, 58, 17, 39, 17, 23, 2, 0, 10, 30, 0, 10, 14, 0, 9, 21, 7, 25],  # however, it is cold
         [17, 1, 30, 2, 0, 14, 7, 17, 17, 15, 0, 1, 29, 25, 0, 23, 17, 1, 25],  # eat, sleep and read
         [58, 19, 17, 29, 0, 14, 19, 17, 0, 14, 15, 21, 5, 17, 2, 0, 19, 17, 23],  # when she spoke, her
         [13, 10, 29, 25, 0, 58, 1, 14, 0, 17, 7, 14, 17, 58, 19, 17, 23, 17]],  # mind was elsewhere

        [[32, 9, 19, 1, 23, 7, 10, 17, 8, 32, 57]],  # Charlie(dagger)

        [[13, 61, 0, 3, 23, 21, 30, 19, 17, 23, 14, 0, 16, 32, 36],  # my brothers -
         [32, 5, 10, 23, 5, 2, 0, 32, 13, 1, 30, 30, 0, 1, 29, 25],  # Kirk, Matt and
         [32, 5, 23, 10, 14, 0, 16, 32, 36, 0, 1, 23, 17, 0, 5, 10, 29, 25]],  # Kris - are kind

        [[15, 37, 15, 10, 7, 16, 36, 30, 17, 1, 9, 19, 17, 23, 0, 23, 1, 30, 10, 21]],  # pupil-teacher ratio

        [[14, 30, 21, 15, 22]],  # stop!

        [[24, 45, 0, 58, 21, 13, 17, 29, 14, 0, 30, 21, 10, 7, 17, 30]],  # (women gender symbol) womens toilet

        [[24, 61, 0, 13, 17, 29, 14, 0, 30, 21, 10, 7, 17, 30]],  # (men gender symbol) mens toilet

        [[56, 57, 3, 23, 17, 1, 5, 10, 29, 27, 3, 1, 25]],  # #breakingbad

        [[24, 9, 24, 23, 24, 30]],  # (copyright symbol)(registered symbol)(trademark symbol)

        [[32, 11, 50, 32, 1, 50, 32, 31, 50]],  # F.A.Q.

        [[58, 19, 21, 38]],  # who? - "questionMark_openingNonSpecificQuotation"

        [[56, 38, 0, 32, 11, 23, 17, 29, 9, 19, 0, 56, 52]],  # << French >>

        [[38, 32, 9, 21, 21, 7, 52]],  # 'Cool' - "questionMark_openingNonSpecificQuotation" and "closingNonSpecificQuotation"

        [[6, 0, 18, 0, 56, 33, 56, 12, 40, 36, 8, 1]],  # ; : \/_@

        [[60, 1, 26, 19, 48, 1]],  # 108a

        [[60, 3, 32, 3]],  # 2B

        [[60, 11, 26, 13]],  # 60m

        [[25, 21, 9, 60, 3, 50, 48, 19, 30, 13, 7]],  # doc2.html

        [[60, 1, 14, 30]],  # 1st

        [[60, 1, 10, 1, 25, 16, 36, 60, 1, 10, 1, 19]],  # 1914-1918

        [[60, 1, 3, 9, 25, 16, 17, 11, 27, 19, 16, 10, 26, 1, 3]],  # 1234 5678 9012

        [[60, 25, 16, 38, 60, 27, 0, 16, 54, 0, 60, 3, 19]],  # 4x7 = 28

        [[60, 27, 8, 34, 60, 1, 26]],  # 7^10

        [[60, 17, 26, 8, 9]],  # 50(cent symbol)

        [[8, 14, 60, 10, 50, 10, 10]],  # $9.99

        [[60, 3, 26, 24, 26, 32, 9, 0, 16, 54, 0, 60, 11, 19, 24, 26, 32, 11]],  # 20(degree symbol)C = 68(degree symbol)F

        [[60, 17, 54, 60, 17, 54, 54, 0, 30, 1, 7, 7]],  # 5'5" tall

        [[60, 17, 3, 24, 26, 60, 3, 17, 54, 60, 1, 3, 50, 9, 19, 54, 54, 32, 29]],  # 52(degree symbol)25'12.38"N

        [[60, 1, 12, 3]],  # 1/2

        [[60, 9, 60, 1, 12, 25]],  # 3(1/4)

        [[60, 3, 56, 12, 60, 9]],  # 2/3

        [[55, 45, 40, 12, 61, 62]],  # (generalFractionOpenIndicator)x/y(generalFractionCloseIndicator)

        [[55, 60, 3, 25, 48, 9, 13, 40, 12, 60, 11, 48, 9, 13, 62]],  # (generalFractionOpenIndicator)24cm/6cm(generalFractionCloseIndicator)

        [[24, 15, 24, 14, 60, 1, 26, 40, 52]],  # (paragraph)(section)10%

        [[41, 60, 3, 17, 44, 0, 16, 54, 0, 60, 17]],  # (openSquareRoot)25(closeSquareRoot) = 5

        [[32, 19, 34, 60, 3, 32, 21]],  # H(subscript 2)O

        [[45, 20, 60, 3]],  # x(superscript 2)

        [[45, 0, 8, 20, 0, 61]],  # x ~ y

        [[24, 6, 9, 7, 10, 9, 5, 0, 21, 29, 0, 24, 2, 30, 19, 17, 0, 29, 17, 45, 30]],  # <b>c</b>lick on <b>the</b> next

        [[40, 54, 30, 19, 17, 0, 58, 21, 23, 25, 14, 40, 4]],  # <i>the words</i>

        [[58, 1, 30, 17, 23, 51, 21, 10, 9, 17]],  # water(right arrow)ice

        [[43, 60, 25, 0, 32, 32, 1, 3, 9, 25]],  # (square) ABCD

        [[43, 60, 25, 49, 32, 32, 1, 3, 9, 25]],  # (square)ABCD - shapeTerminator

        [[32, 9, 60, 41, 3, 60, 35, 32, 32, 1, 60, 33, 9, 60, 41, 0, 9, 60, 41]],  # C(sharp)b(flat)A(natural)C(sharp) c(sharp)

        [[7, 1, 24, 22, 17, 23, 10, 29, 27]],  # la(ligature)ering

        [[24, 2, 32, 1, 32, 24, 22, 17, 30, 19, 17, 23, 0]],  # A(ligature)Ether

        [[32, 32, 40, 27, 1]],  # (capital gamma)A

        [[11, 23, 1, 29, 24, 47, 9, 1, 10, 14]],  # fran(c with cedilla)ais



    ]

    cellParser = BrailleCellParser()
    cellParser.setBrailleGrade("Grade-1")

    for test in braille_tests:
        parsed_braille = cellParser.parseBraille(test)
        print(parsed_braille)


